<!DOCTYPE html>
<html>
  <head>
    <!-- borrowed from https://github.com/ClassiCube/ClassiCube/blob/master/doc/hosting-flask.md -->
    <meta name="viewport" content="width=device-width" />
    <style>
      body {
        margin: 0;
        background: white;
      }

      .row {
        margin-left: auto;
        margin-right: auto;
        max-width: 62.5em;
      }

      .sec {
        background: #f1ecfa;
        padding: 10px 0 5px;
      }
    </style>
  </head>
  <body>
    <div id="body">
      <div class="sec">
        <div class="row">
          <canvas
            id="game_canvas"
            style="
              display: block;
              box-sizing: border-box;
              border-width: 0px;
              padding: 0;
              margin: 0 auto;
              background-color: black;
              width: 100%;
              height: auto;
            "
            oncontextmenu="event.preventDefault()"
            tabindex="-1"
            width="1000"
            height="562"
          ></canvas>
          <span id="logmsg" style="font-size: 18px; color: red"></span>
        </div>
      </div>
      <script type="text/javascript">
        function resizeGameCanvas() {
          const cc_canv = document.getElementById("game_canvas");
          const dpi = window.devicePixelRatio;
          const aspect_ratio = 16 / 9;

          const viewport_w = cc_canv.parent().width();
          const viewport_h = viewport_w / aspect_ratio;

          const canv_w = Math.round(viewport_w);
          const canv_h = Math.round(viewport_h);

          if (canv_h % 2) {
            canv_h = canv_h - 1;
          }
          if (canv_w % 2) {
            canv_w = canv_w - 1;
          }

          // Mobile mode
          const screen_h = Math.min(
            window.innerHeight,
            window.outerHeight || window.innerHeight
          );
          canv_h = screen_h;
          // Mobile mode

          cc_canv[0].width = canv_w * dpi;
          cc_canv[0].height = canv_h * dpi;
        }

        const Module = {
          preRun: [resizeGameCanvas],
          postRun: [],
          arguments: game_args,
          print: function (text) {
            if (arguments.length > 1)
              text = Array.prototype.slice.call(arguments).join(" ");
            console.log(text);
          },
          printErr: function (text) {
            if (arguments.length > 1)
              text = Array.prototype.slice.call(arguments).join(" ");
            console.error(text);
          },
          canvas: (function () {
            return document.getElementById("canvas");
          })(),
          setStatus: function (text) {
            console.log(text);
            document.getElementById("logmsg").innerText = text;
          },
          totalDependencies: 0,
          monitorRunDependencies: function (left) {
            this.totalDependencies = Math.max(this.totalDependencies, left);
            Module.setStatus(
              left
                ? "Preparing... (" +
                    (this.totalDependencies - left) +
                    "/" +
                    this.totalDependencies +
                    ")"
                : "All downloads complete."
            );
          },
        };
        Module.setStatus("Downloading...");
        window.onerror = function (msg) {
          Module.setStatus(`Exception thrown, see JavaScript console (${msg})`);
          Module.setStatus = function (text) {
            if (text) Module.printErr(`[post-exception status] ${text}`);
          };
        };
      </script>
      <script
        async
        type="text/javascript"
        src="/static/classisphere.js"
      ></script>
    </div>
  </body>
</html>
